import { SvelteComponent } from "svelte";
declare const __propDef: {
    props: {
        /**
             * The style of the frame for the carousel.
             */ style?: string | undefined;
        speed?: number | undefined;
        snapSeconds?: number | undefined;
        shouldSnap?: boolean | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export type CatlystCarouselProps = typeof __propDef.props;
export type CatlystCarouselEvents = typeof __propDef.events;
export type CatlystCarouselSlots = typeof __propDef.slots;
/**
 * Adds carousel carriage behaviors to the child element in this component.
 *
 * ```svelte
 * <CatlystCarousel style="margin:2.5vw" speed={2} snapSeconds={0.2} shouldSnap>
 *     {elements}
 * </CatlystCarousel>
 * ```
 *  - speed : speed of the carousel
 *  - snapSeconds : how long it takes for the carousel to snap
 *  - shouldSnap : if the carousel should snap (defaults true)
 *
 * Notes:
 * If the child element/carriages move are resizing when they are not meant to do so, define a min-width and a max-width in the style of the child elements.
 */
export default class CatlystCarousel extends SvelteComponent<CatlystCarouselProps, CatlystCarouselEvents, CatlystCarouselSlots> {
}
export {};
